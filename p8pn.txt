var O1 >= 0;
var O2 >= 0;
var I0 >= 0;
var I1 >= 0;
var I2 >= 0;
var L0 >= 0;
var L1 >= 0;
var N0 >= 0;
var N1 >= 0;
var F0 >= 0;
var F1 >= 0;
var F2 >= 0;
var F3 >= 0;
var DL0 >=0;
var DL1 >=0;
var DN0 >=0;
var DN1 >=0;
var DF0 >=0;
var DF1 >=0;
var DF2 >=0;
var DF3 >=0;
var C >= 0;
var jump=44;
maximize z:     C;


subject to OO_r: 2*I0 <= jump;

subject to OI_r: L0+2*L1 <= 2*jump;
#subject to O0I1_r: L0+DL0+2*L1-(I0+I1) <= 2*jump;
#subject to O0I0: O1+I1-I0 <= jump;
#subject to O1I: L0+2*L1+DL1-(O1+2*I0) <= jump;
#subject to OI1: L0+DL0+2*L1-(I1+I0) <= jump;

subject to OL0_r: F0+3*F1-(L0+2*L1) <= jump;
subject to OL1_r: 2*N0+2*N1-(L0+2*L1) <= jump;

# subject to O0L1_r: 2*N0+2*N1-(L0+2*L1) <= jump;
# subject to O0L1B: O1+DL1 <= jump;
# subject to O1L1: 2*N0+N1+N1+DN1-O1-(L0+2*L1) <= jump;

subject to ON0_r: F0+3*F1+F2-(2*N0+2*N1) <= jump;

#subject to O0N1_b: O1+DN1 <= jump;
subject to O0N1_r: F0+2*F1+F2+F2-(2*N0+2*N1) <= jump;
subject to O1N1_r: F0+2*F1+F2+(F2+DF2)-O1-(2*N0+2*N1) <= jump;
#subject to O1N1B: O2-O1+DN1 <= jump;

subject to OF0_r: F1 <= jump;

#subject to O0F1_b: O1+DF1 <= jump; #?
subject to O0F1_r: F2 <= jump;
subject to O1F1_r: F2+DF2-O1 <= jump;

subject to O0F2_b: O1+DF2 <= jump; 
subject to O1F2_r: F3+DF3-O1 <= jump;

subject to OF3_b: O2-O1+DF3 <= jump; 

#subject to I1I: N0+N0+DN0+2*N1 -I1-3*I0 <= jump;
subject to II_r: 2*N0+2*N1-4*I0 <= jump;

subject to IL0_r: F0+3*F1+F2 - (2*I0+L0+2*L1) <= jump;
#subject to I0L1_b: I1-I0+DL1 <= jump;
subject to I0L1_r: F0+2*F1+2*F2-(I0+I0+L0+2*L1) <= jump;
subject to I1L1_r: F0+2*F1+DF1+2*F2-(I1+I0+L0+2*L1) <= jump;

#subject to I1L1: I2-I1+DL1 <= jump;
#subject to IN0_b: I2-I1+DN0 <= jump; #?
subject to IN0_r: 2*F2+3*F1+F0-(2*I0+2*N0+2*N1) <= jump; #?
subject to IN1_b: I2-I1+DN1 <= jump; #?

#subject to I1F0_b: I2-I1+DF0 <= jump; #?
subject to I1F0_r: F1+DF1+F2-(I1+I0) <= jump; #?
#subject to I0F0_b: I1-I0+DF0 <= jump; #?
subject to I0F0_r: F1+F2-(I0+I0) <= jump; #?
# subject to I0I0B: I1 <= jump;
#subject to I0I0R: 2*N0+2*N1-4*I0 <= jump; 
subject to c25: 2*O1 -O2 <= 0;
subject to DF0F1: DF1 -DF0 <= 0;
subject to DF1F2: DF2 -DF1 <= 0;
# subject to c28: N0 -N1 <= 0;
#subject to c29: DL1 -DL0 <= 0;
subject to L0L0: 2*DL0 <= jump;
subject to N0N0: 2*DN0 <= jump;
subject to N1N1: 2*DN1 <= jump;
subject to F0F0: 2*DF0 <= jump;
subject to DL0N0: DN0 -DL0 <= 0;
subject to DL1N0: DN0 -DL1 <= 0;
subject to DL1N1: DN1 -DL1 <= 0;
subject to DN0F0: DF0 -DN0 <= 0;
subject to DN1F1: DF1 -DN1 <= 0;
subject to CO: C <=O2; 
subject to CI: C <=I2; 
subject to CL0: C <=L0+2*DL0; 
subject to CL1: C <=L1+2*DL1; 
subject to CN0: C <=N0+2*DN0; 
subject to CN1: C <=N1+2*DN1; 
subject to CF0: C <=F0+2*DF0; 
subject to CF1: C <=F1+2*DF1; 
subject to CF2: C <=F2+2*DF2; 
subject to CF3: C <=F3+2*DF3; 
subject to DIDI: I1-I0<=I2-I1;

solve;
printf "  O   I  L0  L1  N0  N1  F0  F1  F2  F3\n";
printf "  0 % 3.0f % 3.0f % 3.0f % 3.0f % 3.0f % 3.0f % 3.0f % 3.0f % 3.0f\n", I0,L0,L1,N0,N1,F0,F1,F2,F3;
printf "% 3.0f % 3.0f % 3.0f % 3.0f % 3.0f % 3.0f % 3.0f % 3.0f % 3.0f % 3.0f\n",O1,I1,L0+DL0,L1+DL1,N0+DN0,N1+DN1,F0+DF0,F1+DF1,F2+DF2,F3+DF3;
printf "% 3.0f % 3.0f % 3.0f % 3.0f % 3.0f % 3.0f % 3.0f % 3.0f % 3.0f % 3.0f\n",O2,I2,L0+2*DL0,L1+2*DL1,N0+2*DN0,N1+2*DN1,F0+2*DF0,F1+2*DF1,F2+2*DF2,F3+2*DF3;
end;
